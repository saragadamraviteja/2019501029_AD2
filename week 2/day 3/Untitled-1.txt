See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED
API:          PASSED

Spotbugs:     FAILED (2 warnings)
PMD:          FAILED (5 warnings)
Checkstyle:   FAILED (0 errors, 54 warnings)

Correctness:  21/31 tests passed
Memory:       6/6 tests passed
Timing:       16/17 tests passed

Aggregate score: 79.47%
[Compilation: 5%, API: 5%, Spotbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
 14K Jan 27 09:03 SeamCarver.java


********************************************************************************
*  COMPILING                                                                    
********************************************************************************


% javac11 SeamCarver.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
SeamCarver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS                                       
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------
M C SUA_SUSPICIOUS_UNINITIALIZED_ARRAY SUA: Method SeamCarver.findVerticalSeam() returns an array that appears not to be initialized  At SeamCarver.java:[line 71]
M C SUA_SUSPICIOUS_UNINITIALIZED_ARRAY SUA: Method SeamCarver.findHorizontalSeam() returns an array that appears not to be initialized  At SeamCarver.java:[line 326]
Warnings generated: 2


================================================================


% pmd .
*-----------------------------------------------------------
SeamCarver.java:66: Array initialization can be written shorter [UseShortArrayInitializer]
SeamCarver.java:125: Avoid unused local variables, such as 'min'. [UnusedLocalVariable]
SeamCarver.java:126: Avoid unused local variables, such as 'k'. [UnusedLocalVariable]
SeamCarver.java:321: Array initialization can be written shorter [UseShortArrayInitializer]
SeamCarver.java:374: Array initialization can be written shorter [UseShortArrayInitializer]
PMD ends with 5 warnings.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] SeamCarver.java:2:8: Unused import statement for 'edu.princeton.cs.algs4.StdIn'. [UnusedImports]
[WARN] SeamCarver.java:3:8: Unused import statement for 'edu.princeton.cs.algs4.StdOut'. [UnusedImports]
[WARN] SeamCarver.java:4:8: Unused import statement for 'edu.princeton.cs.algs4.In'. [UnusedImports]
[WARN] SeamCarver.java:38:28: The parameter variable 'RGBValue' must start with a lowercase letter and use camelCase. [ParameterName]
[WARN] SeamCarver.java:48:30: The parameter variable 'RGBValue' must start with a lowercase letter and use camelCase. [ParameterName]
[WARN] SeamCarver.java:58:29: The parameter variable 'RGBValue' must start with a lowercase letter and use camelCase. [ParameterName]
[WARN] SeamCarver.java:62:5: Declare instance variables after static variables but before constructors and methods. [DeclarationOrder]
[WARN] SeamCarver.java:82:7: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:133:23: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:136:29: '=' is not preceded with whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:137:11: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:138:11: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:139:11: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:140:11: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:142:15: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:143:15: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:145:38: '<' is not followed by whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:145:60: ')' is preceded with whitespace. [ParenPad]
[WARN] SeamCarver.java:149:44: ';' is preceded with whitespace. [NoWhitespaceBefore]
[WARN] SeamCarver.java:154:19: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:156:23: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:159:23: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:165:18: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:167:23: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:168:23: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:170:27: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:177:31: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:181:31: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:186:31: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:191:34: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:194:13: 'if' is not followed by whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:194:29: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:196:13: '}' is not followed by whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:196:14: 'else' is not followed by whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:196:14: 'else' is not preceded with whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:196:18: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:219:11: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] SeamCarver.java:250:9: 'for' is not followed by whitespace. [WhitespaceAround]
[WARN] SeamCarver.java:250:45: '{' is not preceded with whitespace. [WhitespaceAround]
...
Checkstyle ends with 0 errors and 54 warnings.

% custom checkstyle checks for SeamCarver.java
*-----------------------------------------------------------


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of SeamCarver
*-----------------------------------------------------------
Running 31 total tests.

Test 1a: check energy() with file inputs
  * 6x5.png
  * 4x6.png
  * 10x12.png
  * 3x7.png
  * 5x6.png
  * 7x3.png
  * 7x10.png
  * 12x10.png
  * stripes.png
  * diagonals.png
  * chameleon.png
  * HJoceanSmall.png
  * 1x8.png
  * 8x1.png
  * 1x1.png
==> passed

Test 1b: check energy() with random pictures
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
  * 250-by-250
==> passed

Test 1c: check energy() with random pictures in which the RGB components
         of each pixel are in a small range
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
  * 250-by-250
==> passed

Test 2a: check width() with file inputs
  * 6x5.png
  * 4x6.png
==> passed

Test 2b: check width() with random pictures
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
==> passed

Test 3a: check height() with file inputs
  * 6x5.png
  * 4x6.png
==> passed

Test 3b: check height() with random pictures
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
==> passed

Test 4a: check findVerticalSeam() with file inputs
  * 6x5.png
  * 4x6.png
  * 10x12.png
  * 3x7.png
  * 5x6.png
  * 7x3.png
  * 7x10.png
  * 12x10.png
  * stripes.png
  * diagonals.png
  * chameleon.png
    - returns a seam with the wrong energy
    - energy of student   seam = 2493.6522623337833
    - energy of reference seam = 2487.0629785467218

  * HJoceanSmall.png
    - returns a seam with the wrong energy
    - energy of student   seam = 3534.865724644412
    - energy of reference seam = 3490.746451319955

  * 1x8.png
  * 8x1.png
  * 1x1.png
==> FAILED

Test 4b: check findVerticalSeam() with random pictures
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 8-by-8
    - returns a seam with the wrong energy
    - energy of student   seam = 3219.0057389120925
    - energy of reference seam = 3189.938778733509

    - failed on trial 8 of 50

  * 7-by-10
  * 250-by-250
    - returns a seam with the wrong energy
    - energy of student   seam = 46335.26862309757
    - energy of reference seam = 44714.937033255956

    - failed on trial 1 of 2

==> FAILED

Test 4c: check findVerticalSeam() with random pictures in which
         the RGB values of each pixel are in a small range
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
  * 8-by-8
    - returns a seam with the wrong energy
    - energy of student   seam = 2015.4272151070568
    - energy of reference seam = 2014.7500528225291

    - failed on trial 2 of 50

  * 250-by-250
    - returns a seam with the wrong energy
    - energy of student   seam = 2664.4096746985997
    - energy of reference seam = 2653.162939808415

    - failed on trial 1 of 2

==> FAILED

Test 5a: check findHorizontalSeam() with file inputs
  * 6x5.png
  * 4x6.png
  * 10x12.png
  * 3x7.png
  * 5x6.png
  * 7x3.png
  * 7x10.png
  * 12x10.png
  * stripes.png
  * diagonals.png
  * chameleon.png
    - returns a seam with the wrong energy
    - energy of student   seam = 2680.9849789526234
    - energy of reference seam = 2666.4684825481645

  * HJoceanSmall.png
    - returns a seam with the wrong energy
    - energy of student   seam = 3787.299971977725
    - energy of reference seam = 2848.293625709847

  * 1x8.png
  * 8x1.png
  * 1x1.png
==> FAILED

Test 5b: check findHorizontalSeam() with random pictures
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
    - returns a seam with the wrong energy
    - energy of student   seam = 3015.9794196240637
    - energy of reference seam = 2922.394059027358

    - failed on trial 7 of 50

  * 8-by-8
    - returns a seam with the wrong energy
    - energy of student   seam = 3166.0502558898943
    - energy of reference seam = 3154.1510359776944

    - failed on trial 10 of 50

  * 250-by-250
    - returns a seam with the wrong energy
    - energy of student   seam = 45218.410379385314
    - energy of reference seam = 44963.06106558545

    - failed on trial 1 of 2

==> FAILED

Test 5c: check findHorizontalSeam() with random pictures in which the RGB
         components of each pixel are in a small range
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
    - returns a seam with the wrong energy
    - energy of student   seam = 2015.1148883050348
    - energy of reference seam = 2013.44665340674

    - failed on trial 13 of 50

  * 8-by-8
    - returns a seam with the wrong energy
    - energy of student   seam = 2016.8373325333987
    - energy of reference seam = 2016.38451485808

    - failed on trial 14 of 50

  * 250-by-250
    - returns a seam with the wrong energy
    - energy of student   seam = 2659.6177644011227
    - energy of reference seam = 2637.841165179225

    - failed on trial 1 of 2

==> FAILED

Test 6a: check removeVerticalSeam() with file inputs and optimal seams
  * 6x5.png
  * 10x12.png
  * 3x7.png
  * 5x6.png
  * 7x3.png
  * 7x10.png
  * 12x10.png
  * stripes.png
  * diagonals.png
  * chameleon.png
  * HJoceanSmall.png
  * 8x1.png
==> passed

Test 6b: check removeVerticalSeam() with random pictures and optimal seams
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
  * 250-by-250
==> passed

Test 6c: check removeVerticalSeam() with file inputs and random seams
  * 6x5.png
  * 10x12.png
  * 3x7.png
  * 5x6.png
  * 7x3.png
  * 7x10.png
  * 12x10.png
  * stripes.png
  * diagonals.png
  * chameleon.png
  * HJoceanSmall.png
  * 8x1.png
==> passed

Test 6d: check removeVerticalSeam() with random pictures and random seams
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
  * 250-by-250
==> passed

Test 7a: check removeHorizontalSeam() with file inputs and optimal seams
  * 6x5.png
  * 10x12.png
  * 3x7.png
  * 5x6.png
  * 7x3.png
  * 7x10.png
  * 12x10.png
  * stripes.png
  * diagonals.png
  * chameleon.png
  * HJoceanSmall.png
  * 1x8.png
==> passed

Test 7b: check removeHorizontalSeam() with random pictures and optimal seams
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
  * 250-by-250
==> passed

Test 7c: check removeHorizontalSeam() with file inputs and random seams
  * 6x5.png
  * 10x12.png
  * 3x7.png
  * 5x6.png
  * 7x3.png
  * 7x10.png
  * 12x10.png
  * stripes.png
  * diagonals.png
  * chameleon.png
  * HJoceanSmall.png
  * 1x8.png
==> passed

Test 7d: check removeHorizontalSeam() with random pictures and random seams
  * 4-by-6
  * 5-by-5
  * 6-by-4
  * 7-by-10
  * 250-by-250
==> passed

Test 8: check energy() with invalid arguments
  * picture = 6x5.png, call energy(-1, 4)
  * picture = 6x5.png, call energy(6, 4)
  * picture = 6x5.png, call energy(5, 5)
  * picture = 6x5.png, call energy(4, -1)
  * picture = 6x5.png, call energy(4, 5)
==> passed

Test 9a: check removeVerticalSeam() with invalid seam
  * picture = 10x10.png
  * picture = 3x7.png
    - fails to throw an exception when calling removeVerticalSeam()
      with an invalid seam
    - entry 6 is not between 0 and 2
    - invalid seam = { 2, 2, 2, 1, 0, 0, -1 }
    - failed on trial 34 of 100

  * picture = 7x3.png
    - fails to throw an exception when calling removeVerticalSeam()
      with an invalid seam
    - entry 2 is not between 0 and 6
    - invalid seam = { 1, 0, -1 }
    - failed on trial 93 of 100

  * picture = 10x12.png
    - fails to throw an exception when calling removeVerticalSeam()
      with an invalid seam
    - entry 11 is not between 0 and 9
    - invalid seam = { 3, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, -1 }
    - failed on trial 6 of 100

  * picture = 12x10.png
  * picture = 1x8.png
  * picture = 8x1.png
    - fails to throw an exception when calling removeVerticalSeam()
      with an invalid seam
    - entry 0 is not between 0 and 7
    - invalid seam = { -1 }
    - failed on trial 1 of 100

  * picture = 1x1.png
==> FAILED

Test 9b: check removeHorizontalSeam() with invalid seam
  * picture = 10x10.png
    - fails to throw an exception when calling removeHorizontalSeam()
      with an invalid seam
    - entry 9 is not between 0 and 9
    - invalid seam = { 1, 0, 0, 0, 1, 0, 0, 0, 0, -1 }
    - failed on trial 17 of 100

  * picture = 3x7.png
    - fails to throw an exception when calling removeHorizontalSeam()
      with an invalid seam
    - entry 2 is not between 0 and 6
    - invalid seam = { 1, 0, -1 }
    - failed on trial 47 of 100

  * picture = 7x3.png
    - fails to throw an exception when calling removeHorizontalSeam()
      with an invalid seam
    - entry 6 is not between 0 and 2
    - invalid seam = { 2, 2, 2, 1, 0, 0, -1 }
    - failed on trial 36 of 100

  * picture = 10x12.png
  * picture = 12x10.png
  * picture = 1x8.png
    - fails to throw an exception when calling removeHorizontalSeam()
      with an invalid seam
    - entry 0 is not between 0 and 7
    - invalid seam = { -1 }
    - failed on trial 1 of 100

  * picture = 8x1.png
  * picture = 1x1.png
==> FAILED

Test 9c: check removeHorizontalSeam() and removeVerticalSeam() with null arguments
  * picture = 6x5.png
  * picture = 3x7.png
==> passed

Test 10a: check that client can mutate the Picture object that is passed to the constructor
==> passed

Test 10b: check that client can mutate the Picture object that is returned by picture()
==> passed

Test 11: check constructor with null argument
==> passed

Test 12a: check intermixed calls to findHorizontalSeam(), findVerticalSeam(),
          removeHorizontalSeam(), and removeVerticalSeam(), width(), height(),
          energy(), and picture() made with probabilities p1, p2, p3, p4, p5,
          p6, p7, and p8, respectively with optimal seams
  * random 5-by-6 image with p = (0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5)
  * random 6-by-5 image with p = (0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.5)
  * random 6-by-6 image with p = (0.1, 0.1, 0.2, 0.2, 0.0, 0.0, 0.0, 0.4)
  * random 6-by-6 image with p = (0.2, 0.2, 0.0, 0.0, 0.2, 0.2, 0.2, 0.0)
  * random 6-by-6 image with p = (0.1, 0.1, 0.2, 0.2, 0.1, 0.1, 0.1, 0.1)
  * random 100-by-110 image with p = (0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5)
  * random 110-by-100 image with p = (0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.5)
  * random 110-by-110 image with p = (0.1, 0.1, 0.2, 0.2, 0.0, 0.0, 0.0, 0.4)
    - returns a seam with the wrong energy
    - energy of student   seam = 2740.946920655007
    - energy of reference seam = 2725.554890791148

    - failed on operation 3 of 100
    - findHorizontalSeam() returns wrong seam
    - sequence of operations was:
      SeamCarver carver = new SeamCarver(picture)
      carver.picture()
      carver.findVerticalSeam()
      carver.findHorizontalSeam()

  * random 100-by-100 image with p = (0.2, 0.2, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2)
    - returns a seam with the wrong energy
    - energy of student   seam = 2667.5725619443183
    - energy of reference seam = 2657.0045330558896

    - failed on operation 2 of 100
    - findHorizontalSeam() returns wrong seam
    - sequence of operations was:
      SeamCarver carver = new SeamCarver(picture)
      carver.picture()
      carver.findHorizontalSeam()

  * random 110-by-110 image with p = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2)
    - returns a seam with the wrong energy
    - energy of student   seam = 2747.126609789214
    - energy of reference seam = 2712.1490595430882

    - failed on operation 1 of 100
    - findHorizontalSeam() returns wrong seam
    - sequence of operations was:
      SeamCarver carver = new SeamCarver(picture)
      carver.findHorizontalSeam()

==> FAILED

Test 12b: check intermixed calls to findHorizontalSeam(), findVerticalSeam(),
          removeHorizontalSeam(), and removeVerticalSeam(), width(), height(),
          energy(), and picture() made with probabilities p1, p2, p3, p4, p5,
          p6, p7, and p8, respectively with random seams
  * random 5-by-6 image with p = (0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5)
  * random 6-by-5 image with p = (0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.5)
  * random 6-by-6 image with p = (0.1, 0.1, 0.2, 0.2, 0.0, 0.0, 0.0, 0.4)
  * random 6-by-6 image with p = (0.2, 0.2, 0.0, 0.0, 0.2, 0.2, 0.2, 0.0)
  * random 6-by-6 image with p = (0.1, 0.1, 0.2, 0.2, 0.1, 0.1, 0.1, 0.1)
  * random 100-by-110 image with p = (0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5)
  * random 110-by-100 image with p = (0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.5)
  * random 110-by-110 image with p = (0.1, 0.1, 0.2, 0.2, 0.0, 0.0, 0.0, 0.4)
    - returns a seam with the wrong energy
    - energy of student   seam = 2702.9591962020772
    - energy of reference seam = 2692.1909968069895

    - failed on operation 18 of 100
    - findHorizontalSeam() returns wrong seam
    - sequence of operations was:
      SeamCarver carver = new SeamCarver(picture)
      carver.picture()
      carver.removeVerticalSeam()
      carver.removeHorizontalSeam()
      carver.picture()
      carver.removeVerticalSeam()
      carver.removeHorizontalSeam()
      carver.removeVerticalSeam()
      carver.removeHorizontalSeam()
      carver.picture()
      carver.findVerticalSeam()
      carver.findVerticalSeam()
      carver.findVerticalSeam()
      carver.removeHorizontalSeam()
      carver.picture()
      carver.picture()
      carver.removeVerticalSeam()
      carver.removeVerticalSeam()
      carver.findHorizontalSeam()

  * random 100-by-100 image with p = (0.2, 0.2, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2)
  * random 110-by-110 image with p = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2)
    - returns a seam with the wrong energy
    - energy of student   seam = 2732.4642530356764
    - energy of reference seam = 2719.705454105254

    - failed on operation 1 of 100
    - findHorizontalSeam() returns wrong seam
    - sequence of operations was:
      SeamCarver carver = new SeamCarver(picture)
      carver.findHorizontalSeam()

==> FAILED

Test 12c: check intermixed calls to findHorizontalSeam(), findVerticalSeam(),
          removeHorizontalSeam(), and removeVerticalSeam(), width(), height(),
          energy(), and picture() made with probabilities p1, p2, p3, p4, p5,
          p6, p7, and p8, respectively with optimal seams
          (tests corner cases when width = 1 or 2 and/or height = 1 or 2)
  * random 1-by-8 image with p = (0.1, 0.1, 0.2, 0.0, 0.1, 0.1, 0.2, 0.2)
  * random 8-by-1 image with p = (0.1, 0.1, 0.0, 0.2, 0.1, 0.1, 0.2, 0.2)
  * random 1-by-1 image with p = (0.2, 0.2, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2)
  * random 2-by-8 image with p = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2)
  * random 8-by-2 image with p = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2)
  * random 2-by-2 image with p = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2)
==> passed


Total: 21/31 tests passed!


================================================================
********************************************************************************
*  MEMORY
********************************************************************************

Analyzing memory of SeamCarver
*-----------------------------------------------------------
Running 6 total tests.

Memory usage of a SeamCarver after removing 2 horizontal
and 2 vertical seams from an n-by-n image.

Maximum allowed memory is ~ 12 n^2 bytes.

                 n       student (bytes)
-------------------------------------------
=> passed       16         4512
=> passed       32        13600
=> passed       64        50208
=> passed      128       197160
=> passed      256       785960
=> passed      512      3143208
==> 6/6 tests passed

Total: 6/6 tests passed!

Estimated student memory (bytes) = 12.00 n^2 - 7.93 n + 1566.28   (R^2 = 1.000)

================================================================



********************************************************************************
*  TIMING
********************************************************************************

Timing SeamCarver
*-----------------------------------------------------------
Reference solution is unoptimized.

Running 17 total tests.

Test 1: create a SeamCarver object for a given 736-by-584 picture;
        then call findHorizontalSeam(), removeHorizontalSeam(),
        findVerticalSeam(), removeVerticalSeam(), and picture()
        one each; count total number of calls to methods in Picture
  * constructor calls        = 4
  * get()    calls per pixel = 2.1
  * set()    calls per pixel = 2.1
  * getRGB() calls per pixel = 23.8
    - maximum allowed        = 15

  * setRGB() calls per pixel = 0.0
==> FAILED

Test 2: create a SeamCarver object for a given 736-by-584 picture;
        then call findHorizontalSeam(), removeHorizontalSeam(),
        findVerticalSeam(), and removeVerticalSeam(), and picture();
        once each; count total number of calls to methods in Color
  * constructor calls per pixel = 2.1
  * getRed()    calls per pixel = 0.0
  * getGreen()  calls per pixel = 0.0
  * getBlue()   calls per pixel = 0.0
  * getRGB()    calls per pixel = 0.0
  * equal number of calls to getRed(), getGreen(), and getBlue()
==> passed

Tests 3a-3c: time removeVerticalSeam() for a given 736-by-584 picture
  * student   solution calls per second:      47.97
  * reference solution calls per second:      82.68
  * reference / student ratio:                 1.72

=> passed      student <= 150.0x reference
=> passed      student <=  15.0x reference
=> passed      student <=   4.5x reference

Tests 4a-4c: time findVerticalSeam() and removeVerticalSeam()
             for a given 736-by-584 picture
  * student   solution calls per second:       9.66
  * reference solution calls per second:      12.12
  * reference / student ratio:                 1.25

=> passed      student <= 150.0x reference
=> passed      student <=  15.0x reference
=> passed      student <=   2.3x reference

Tests 5a-5c: time removeHorizontalSeam() for a given 736-by-584 picture
  * student   solution calls per second:      48.21
  * reference solution calls per second:      21.91
  * reference / student ratio:                 0.45

=> passed      student <= 150.0x reference
=> passed      student <=  15.0x reference
=> passed      student <=   4.5x reference

Tests 6a-6c: time findHorizontalSeam() and removeHorizontalSeam()
             for a given 736-by-584 picture
  * student   solution calls per second:       8.98
  * reference solution calls per second:       7.65
  * reference / student ratio:                 0.85

=> passed      student <= 150.0x reference
=> passed      student <=  15.0x reference
=> passed      student <=   2.3x reference

Tests 7a-7c: time findHorizontalSeam(), removeHorizontalSeam(), findVerticalSeam(),
             and removeVerticalSeam() for a given 736-by-584 picture
  * student   solution calls per second:       5.10
  * reference solution calls per second:       4.84
  * reference / student ratio:                 0.95

=> passed      student <= 150.0x reference
=> passed      student <=  15.0x reference
=> passed      student <=   1.5x reference

Total: 16/17 tests passed!


================================================================